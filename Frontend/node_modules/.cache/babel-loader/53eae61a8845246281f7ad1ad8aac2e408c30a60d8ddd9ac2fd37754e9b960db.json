{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\TRINADH\\\\Downloads\\\\BITS Notes\\\\second sem\\\\Full stack\\\\School Vaccination Project\\\\Frontend\\\\src\\\\context\\\\auth\\\\AuthState.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthState = props => {\n  _s();\n  const initialState = {\n    isAuthenticated: localStorage.getItem(\"isLoggedIn\") === \"true\",\n    // Check if user is logged in\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Login User\n  const login = (username, password) => {\n    if (username === \"admin\" && password === \"adminpassword\") {\n      localStorage.setItem(\"isLoggedIn\", \"true\"); // Set the login flag\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: {\n          username,\n          role: \"admin\"\n        } // Example user info\n      });\n    } else {\n      dispatch({\n        type: \"LOGIN_FAIL\",\n        payload: \"Invalid credentials\"\n      });\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem(\"isLoggedIn\"); // Remove the login flag\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n\n  // Clear Errors\n  const clearErrors = () => dispatch({\n    type: \"CLEAR_ERRORS\"\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useReducer","AuthContext","authReducer","jsxDEV","_jsxDEV","AuthState","props","initialState","isAuthenticated","localStorage","getItem","user","loading","error","state","dispatch","login","username","password","setItem","type","payload","role","logout","removeItem","clearErrors","Provider","value","children","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TRINADH/Downloads/BITS Notes/second sem/Full stack/School Vaccination Project/Frontend/src/context/auth/AuthState.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useReducer } from \"react\"\r\nimport AuthContext from \"./authContext\"\r\nimport authReducer from \"./authReducer\"\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: localStorage.getItem(\"isLoggedIn\") === \"true\", // Check if user is logged in\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState)\r\n\r\n  // Login User\r\n  const login = (username, password) => {\r\n    if (username === \"admin\" && password === \"adminpassword\") {\r\n      localStorage.setItem(\"isLoggedIn\", \"true\") // Set the login flag\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: { username, role: \"admin\" }, // Example user info\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: \"LOGIN_FAIL\",\r\n        payload: \"Invalid credentials\",\r\n      })\r\n    }\r\n  }\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem(\"isLoggedIn\") // Remove the login flag\r\n    dispatch({ type: \"LOGOUT\" })\r\n  }\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => dispatch({ type: \"CLEAR_ERRORS\" })\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthState"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAR,EAAA;EAC3B,MAAMS,YAAY,GAAG;IACnBC,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;IAAE;IAChEC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACE,WAAW,EAAEK,YAAY,CAAC;;EAE/D;EACA,MAAMS,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,eAAe,EAAE;MACxDT,YAAY,CAACU,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,EAAC;MAC3CJ,QAAQ,CAAC;QACPK,IAAI,EAAE,eAAe;QACrBC,OAAO,EAAE;UAAEJ,QAAQ;UAAEK,IAAI,EAAE;QAAQ,CAAC,CAAE;MACxC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,QAAQ,CAAC;QACPK,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACe,UAAU,CAAC,YAAY,CAAC,EAAC;IACtCT,QAAQ,CAAC;MAAEK,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAMV,QAAQ,CAAC;IAAEK,IAAI,EAAE;EAAe,CAAC,CAAC;EAE5D,oBACEhB,OAAA,CAACH,WAAW,CAACyB,QAAQ;IACnBC,KAAK,EAAE;MACLnB,eAAe,EAAEM,KAAK,CAACN,eAAe;MACtCG,IAAI,EAAEG,KAAK,CAACH,IAAI;MAChBC,OAAO,EAAEE,KAAK,CAACF,OAAO;MACtBC,KAAK,EAAEC,KAAK,CAACD,KAAK;MAClBG,KAAK;MACLO,MAAM;MACNE;IACF,CAAE;IAAAG,QAAA,EAEDtB,KAAK,CAACsB;EAAQ;IAAAC,QAAA,EAAAhC,YAAA;IAAAiC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAAjC,EAAA,CAlDKO,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAoDf,eAAeA,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}